#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
"""
import asyncio
import logging
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ sys.path –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from config import TELEGRAM_BOT_TOKEN
from models import user_settings, user_states
from storage import load_user_data

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def cmd_start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    chat_id = update.effective_chat.id
    print(f"üöÄ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
    logger.info(f"üöÄ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if chat_id not in user_settings:
        user_settings[chat_id] = []
    if chat_id not in user_states:
        user_states[chat_id] = None
    
    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é!\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å\n"
        "/help - –ø–æ–º–æ—â—å\n"
        "/test - —Ç–µ—Å—Ç"
    )
    
    await update.message.reply_text(welcome_text)

async def cmd_help(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    chat_id = update.effective_chat.id
    print(f"‚ùì /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
    
    await update.message.reply_text("–≠—Ç–æ –ø–æ–º–æ—â—å!")

async def cmd_test(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /test."""
    chat_id = update.effective_chat.id
    print(f"üß™ /test –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
    
    await update.message.reply_text("–¢–µ—Å—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")

async def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    text = update.message.text
    chat_id = update.effective_chat.id
    
    print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ: '{text}' –æ—Ç {chat_id}")
    logger.info(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ: '{text}' –æ—Ç {chat_id}")
    
    await update.message.reply_text(
        f"‚úÖ –ü–æ–ª—É—á–∏–ª: '{text}'\n"
        f"üÜî –í–∞—à ID: {chat_id}\n"
        f"‚è∞ –í—Ä–µ–º—è: {update.message.date}"
    )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    load_user_data()
    print("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", cmd_start))
    application.add_handler(CommandHandler("help", cmd_help))
    application.add_handler(CommandHandler("test", cmd_test))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(
        drop_pending_updates=False,  # –ù–ï –æ—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å!
        timeout=10
    )

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
