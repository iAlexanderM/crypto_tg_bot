#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤.
"""
import os
import glob
import time
from datetime import datetime, timedelta

def cleanup_old_logs(log_dir=".", max_age_days=7, max_size_mb=100):
    """
    –û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –ª–æ–≥ —Ñ–∞–π–ª—ã.
    
    Args:
        log_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –ª–æ–≥–∞–º–∏
        max_age_days: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Ñ–∞–π–ª–æ–≤ –≤ –¥–Ω—è—Ö
        max_size_mb: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö –ª–æ–≥–æ–≤ –≤ MB
    """
    print(f"üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –≤ {log_dir}")
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ª–æ–≥ —Ñ–∞–π–ª—ã
    log_patterns = ["*.log", "*.log.*"]
    log_files = []
    
    for pattern in log_patterns:
        log_files.extend(glob.glob(os.path.join(log_dir, pattern)))
    
    if not log_files:
        print("üìù –õ–æ–≥ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –û—á–∏—Å—Ç–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
    cutoff_time = time.time() - (max_age_days * 24 * 60 * 60)
    deleted_count = 0
    total_size = 0
    
    for log_file in log_files:
        try:
            file_stat = os.stat(log_file)
            file_size = file_stat.st_size
            file_age = file_stat.st_mtime
            
            total_size += file_size
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
            if file_age < cutoff_time:
                os.remove(log_file)
                deleted_count += 1
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –ª–æ–≥: {log_file}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {log_file}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä
    total_size_mb = total_size / (1024 * 1024)
    print(f"üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: {total_size_mb:.2f} MB")
    
    if total_size_mb > max_size_mb:
        print(f"‚ö†Ô∏è –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤ –ø—Ä–µ–≤—ã—à–∞–µ—Ç {max_size_mb} MB!")
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏
    
    print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {deleted_count}")

if __name__ == "__main__":
    cleanup_old_logs()
